// src/LineChart.js
import React, { useEffect, useState } from 'react';
import { Line } from 'react-chartjs-2';
import axios from 'axios';
import {
  Chart as ChartJS,
  CategoryScale,
  LinearScale,
  PointElement,
  LineElement,
  Title,
  Tooltip,
  Legend,
} from 'chart.js';

// Register the necessary components
ChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);

const LineChart = () => {
  const [chartData, setChartData] = useState({
    labels: [],
    datasets: [],
  });

  useEffect(() => {
    // Fetch data from your backend
    const fetchData = async () => {
      try {
        const response = await axios.get('/api/your-endpoint'); // Replace with your API endpoint
        const data = response.data;

        // Process the data to extract labels and dataset
        const labels = data.map((item) => `Day ${item.day}`);
        const values = data.map((item) => item.value);

        setChartData({
          labels,
          datasets: [
            {
              label: 'My Dataset',
              data: values,
              fill: false,
              backgroundColor: 'rgba(75,192,192,0.4)',
              borderColor: 'rgba(75,192,192,1)',
            },
          ],
        });
      } catch (error) {
        console.error('Error fetching data:', error);
      }
    };

    fetchData();
  }, []);

  const options = {
    responsive: true,
    plugins: {
      legend: {
        position: 'top',
      },
      title: {
        display: true,
        text: 'Line Chart Example',
      },
    },
    scales: {
      y: {
        beginAtZero: true,
        ticks: {
          stepSize: 2, // Set the interval between ticks to 2
          max: 24, // Set the maximum value of the y-axis
        },
      },
    },
  };

  return <Line data={chartData} options={options} />;
};

export default LineChart;

// src/LineChart.js
import React from 'react';
import { Line } from 'react-chartjs-2';
import {
  Chart as ChartJS,
  CategoryScale,
  LinearScale,
  PointElement,
  LineElement,
  Title,
  Tooltip,
  Legend,
} from 'chart.js';

// Register the necessary components
ChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);

const LineChart = () => {

  const data = {
    labels: [' 1', ' 1',' 1',' 1',' 1',' 1',' 1',' 1',' 1',' 1', ' 1',' 1',' 1',' 1',' 1',' 1',' 1',' 1'],
    datasets: [
      {
        label: 'My First dataset',
        data: [ 13, 17, 21, 19, 13, 14, 16, 18, 9, 7,11, 8, 13, 16, 18, 14, 13, 16, 21],
        fill: false,
        backgroundColor: '252525',
        borderColor: '#191919',
      },
    ],
  };

  const options = {
    responsive: true,
    plugins: {
      legend: {
        position: 'top',
      },
      title: {
        display: true,
        text: 'Line Chart Example',
      },
    },
    scales: {
      y: {
        beginAtZero: true,
        ticks: {
          stepSize: 2, // Set the interval between ticks to 2
          max: 24, // Set the maximum value of the y-axis
        }, 
      },
    },
  };

  return <Line data={data} options={options} />;
};

export default LineChart;

